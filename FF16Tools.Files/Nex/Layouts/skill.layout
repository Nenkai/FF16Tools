set_table_type|DoubleKeyed
set_table_category|DoubleKeyed_Localized
use_base_row_id|true

// There are some hardcoded skill ids
// 2 - B9 ? ? ? ? E8 ? ? ? ? 8B 54 24 ? 48 85 C0
// 22 - 41 8D 50 ? E8 ? ? ? ? 4C 8B C0 48 85 C0 74 ? 48 83 38 ? 7C ? 48 8B C8 E8 ? ? ? ? 48 85 C0 74 ? 49 83 38 ? 7C ? 49 8B C8 E8 ? ? ? ? EB ? 48 8D 05 ? ? ? ? C4 E1 FA 2C 40 ? EB ? 33 C0 48 83 C4 ? C3 CC CC C5 FA 10 05
// 26 - 48 89 5C 24 ? 57 48 83 EC ? 8B DA E8
// 41 - BA ? ? ? ? E8 ? ? ? ? C5 FA 10 4F
// 50 - 41 8D 50 ? E8 ? ? ? ? 4C 8B C0 48 85 C0 74 ? 48 83 38 ? 7C ? 48 8B C8 E8 ? ? ? ? 48 85 C0 74 ? 49 83 38 ? 7C ? 49 8B C8 E8 ? ? ? ? EB ? 48 8D 05 ? ? ? ? C4 E1 FA 2C 40 ? EB ? 33 C0 48 83 C4 ? C3 CC CC B8
// 54 (Unk7 = percentage) - B9 ? ? ? ? 41 8D 50 ? E8 ? ? ? ? 48 85 C0 74 ? C5 7A 2C 48

add_column|DLCFlags|int
add_column|Comment|string

// Checked against hardcoded numbers/switch table - 0-12
// ref: 8B 40 ? 83 F8 ? 77 ? 74 ? 83 E8 ? 74 ? 83 E8 ? 74 ? 83 E8 ? 74 ? 83 E8 ? 74 ? 83 F8
// ref2: 44 8B 70 ? 33 FF
add_column|SkillCategoryId|int

// Note: usersituation 992013 is checked first
add_column|ReqSkillIdUnlock1|int
add_column|ReqSkillIdUnlock2|int
add_column|ReqSkillIdUnlock3|int

// Represents a value that is affected by the upgrade level of the skill
// Like in the sattelite rows, that is the number of sateliltes
// - Wings of Light (skill 39), this is an id into bahamutcastmegaflare - max gauge level
// - Ice Age (skill 45), the size of the red portion of the gauge, etc
// - Arm of Darkness (skill 49), value * 1500 = zantetsuken gain for level? 
//   -> ref: E8 ? ? ? ? 0F B6 D0 45 8D 66
//   -> ref2: B8 ? ? ? ? 41 F7 E0 C1 EA ? 69 CA ? ? ? ? 44 2B C1 49 8B C9
//   -> ref3: B9 ? ? ? ? 0F AF F9
// ref (Skill::GetCurrentPotencyParameter(void*, int skillId)) : 48 89 5C 24 ? 48 89 74 24 ? 57 48 83 EC ? 8B FA E8
add_column|CommandPotencyParameter|float

add_column|CommandId|int
add_column|Name|string|rel
add_column|Description|string|rel|-4
add_column|Description1|string|rel|-8
add_column|UpgradeCost|int
add_column|IconTexFileId|int
add_column|ThumbnailTexFileId|int
add_column|MovieDataId|int

// Hardcoded checks against numbers like 6
// ref: 39 58 ? 74 ? 4D 85 C0 74 ? 49 39 18 7C ? 49 8B C8 E8 ? ? ? ? 48 8B D8 EB ? 48 8D 1D
add_column|Unk16|int

// But also checked against hardcoded numbers (for text color)
add_column|SkillUiCategoryId|int

add_column|Unk18|int

// No more than 66
add_column|RecommendAcquireOrder|int
add_column|AttackHalfStars|byte
add_column|StaggerHalfStars|byte

// ref: 38 48 ? 41 8B C1
add_column|MinimumResetLevel|byte

add_column|AvailableToOtherEikonsOnMaster|byte

// Same as RefundPointsOnReset, but depends on current partymember row, specifically Unk9
// used by partymember flag at 0x35 (UnkSkillRelatedBool?)
add_column|RefundPointsOnReset1|byte
add_column|RefundPointsOnReset2|byte
add_column|Unk26|byte
add_column|Unk27|byte
